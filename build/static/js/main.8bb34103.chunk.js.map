{"version":3,"sources":["components/Sidebar.js","components/Navbar.js","components/Player.js","components/tables/RankingTable.js","pages/AddPlayer.js","components/LoadingWheel.js","pages/PlayerProfile.js","maps/TeamMap.js","maps/TeamMapWCC.js","maps/TeamMapRMC.js","maps/TeamMapMWC.js","maps/TeamMapSAC.js","maps/TeamMapGLC.js","maps/TeamMapNEC.js","maps/TeamMapCAC.js","components/MapUS.js","App.js","index.js"],"names":["Sidebar","_this$props","this","props","filterConference","showAllPlayers","titleStyle","padding","conferences","Object","keys","ConferenceCodes","map","conf","index","react_default","a","createElement","key","href","onClick","data-value","Name","replace","className","style","React","Component","Navbar","backHome","_this","changePage","type","data-toggle","data-target","aria-expanded","aria-controls","id","placeholder","_","require","Player","setupPlayerProfile","e","selectedPlayerId","target","getAttribute","selectedPlayer","find","playerData","_id","setSelectedPlayer","data","orderBy","rank","isNaN","pr","parseInt","name","team","conference","points","player_properties","teamAbbreviations","RankingTable","console","log","fetch","then","res","json","response","setPlayers","players","order","conferenceFilter","selectedTeamMap","doOrderBy","item","eligible","code","without","undefined","Player_Player","header_properties","prop","toLowerCase","AddPlayer","state","newPlayer","changedProperties","isEligible","errorMessage","handleClearForm","preventDefault","setState","handleTeamChange","value","TeamCodes","Conf","handleInput","prevState","objectSpread","defineProperty","checkIfEligible","player","length","indexOf","handleFormSubmit","userData","method","body","JSON","stringify","headers","Accept","Content-Type","setAlertMessage","message","input_styles","fontSize","borderRadius","width","borderColor","borderWidth","outline","teamData","SubmitButton","backgroundColor","textAlign","display","onSubmit","AlertMessage","onChange","marginLeft","height","disabled","margin","properties","messageEligible","i","role","LoadingWheel","PlayerProfile","updatedPlayer","pinwheelActive","handleUpdatePlayer","oldPlayer","LoadingWheel_LoadingWheel","TeamMap","clickedTeam","removeMarker","selectedRegions","push","map_us","build","ref","zoomOnScroll","containerStyle","regionsSelectable","regionsSelectableOne","regionStyle","initial","fill","fill-opacity","stroke","stroke-width","stroke-opacity","hover","cursor","selected","selectedHover","containerClassName","onRegionClick","selectedMarkers","TeamMapWCC","TeamMapRMC","TeamMapMWC","TeamMapSAC","TeamMapGLC","TeamMapNEC","TeamMapCAC","MapUS","TeamMapWCC_TeamMapWCC","TeamMapRMC_TeamMapRMC","TeamMapMWC_TeamMapMWC","TeamMapSAC_TeamMapSAC","TeamMapGLC_TeamMapGLC","TeamMapNEC_TeamMapNEC","TeamMapCAC_TeamMapCAC","TeamMap_TeamMap","data-dismiss","aria-label","aria-hidden","App","currentPage","showPlayerModal","selectedConferenceMap","messageUpdate","document","querySelectorAll","remove","newOrderBy","newFilter","teamFilter","hideModal","newPage","updatePlayer","setPinwheel","active","App_AlertMessage","MapUS_MapUS","RankingTable_RankingTable","AddPlayer_AddPlayer","PlayerProfile_PlayerProfile","TeamRankings_default","Navbar_Navbar","Sidebar_Sidebar","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.8bb34103.chunk.js","sourcesContent":["import React from 'react';\nimport ConferenceCodes from './../data/conferenceabbreviations';\n\nexport default class Sidebar extends React.Component {\n\n    render(){\n\n      const { filterConference, showAllPlayers } = this.props;\n\n      const titleStyle = {\n        padding: '0px 20px 0px 20px',\n      };\n\n      const conferences = Object.keys(ConferenceCodes).map((conf, index)=>{\n        return (\n            <li key={index}><a href=\"#\" onClick={ filterConference } data-value={conf}>{ConferenceCodes[conf].Name.replace(' Conference', '')}</a></li>\n          )\n      }); \n\n      return (\n      \t<div className=\"col-sm-3 col-md-2 sidebar\">\n          <ul className=\"nav nav-sidebar\">\n            <li className=\"active\"><a href=\"#\" onClick={showAllPlayers}>Player Rankings<span className=\"sr-only\">(current)</span></a></li>\n            <li><a href=\"#\">Team Rankings</a></li>\n            <li><a href=\"#\">Free Agency</a></li>\n            <li><a href=\"#\">Playoff Race</a></li>\n          </ul>\n          <ul className=\"nav nav-sidebar\">\n            <li><b style={titleStyle}>Player Rankings</b></li>\n            <li><a href=\"#\">Singles</a></li>\n            <li><a href=\"#\">Doubles</a></li>\n          </ul>\n          <ul className=\"nav nav-sidebar\">\n            <li><b style={titleStyle}>Conference</b></li>\n            {conferences}\n          </ul>\n        </div>\n      );\n    }\n}\n","import React from 'react';\n\nexport default class Navbar extends React.Component {\n    backHome = () => {\n      this.props.changePage();\n      this.props.showAllPlayers();\n    } \n    render(){\n      const { changePage, showAllPlayers } = this.props;\n      return (\n      \t  <nav className=\"navbar navbar-inverse navbar-fixed-top\">\n            <div className=\"container-fluid\">\n              <div className=\"navbar-header\">\n                <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n                  <span className=\"sr-only\">Toggle navigation</span>\n                  <span className=\"icon-bar\"></span>\n                  <span className=\"icon-bar\"></span>\n                  <span className=\"icon-bar\"></span>\n                </button>\n                <a href=\"#\" className=\"navbar-brand\" onClick={ showAllPlayers } data-value=\"Home\">International Tennis League</a>\n              </div>\n              <div id=\"navbar\" className=\"navbar-collapse collapse\">\n                <ul className=\"nav navbar-nav navbar-right\">\n                  <li><a href=\"#\" onClick={ changePage } data-value=\"AddPlayer\">Add Player</a></li>\n                  <li><a href=\"#\">Profile</a></li>\n                </ul>\n                <form className=\"navbar-form navbar-right\">\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Search...\" />\n                </form>\n              </div>\n            </div>\n          </nav>\n      );\n    }\n}","import React from 'react';\n\nvar _ = require('lodash');\n\nexport default class Player extends React.Component {\n  setupPlayerProfile = (e) => {\n    const selectedPlayerId = e.target.getAttribute('data-value');\n    const selectedPlayer = _.find(this.props.playerData, {_id: selectedPlayerId});\n\n    this.props.setSelectedPlayer(selectedPlayer);\n    this.props.changePage(\"PlayerProfile\");\n  }\n\n  render(){\n    const { data, orderBy, rank } = this.props;\n\n    if(!isNaN(data.pr) && data.pr !== \"\"){\n      data.pr = parseInt(data.pr);\n    }\n\n    return (    \n      <tr key={data._id}>\n        <td>{ rank + 1 }</td>\n        <td className={ orderBy === \"name\" ? \"active\" : null }><div onClick={ this.setupPlayerProfile } data-value={data._id} className=\"playertablefield\" >{data.name}</div></td>\n        <td className={ orderBy === \"team\" ? \"active\" : null }>{data.team}</td>\n        <td className={ orderBy === \"conference\" ? \"active\" : null }>{data.conference}</td>\n        <td className={ orderBy === \"pr\" ? \"active\" : null }>{data.pr}</td>\n        <td className={ orderBy === \"points\" ? \"active\" : null }>{data.points}</td>\n      </tr>    \n    )\n  }\n}","import React from 'react';\nimport Player from './../Player';\n\nconst player_properties = [\"Name\",\"Team\",\"Conference\",\"PR\",\"Points\"];\n\nvar _ = require('lodash');\n\nvar teamAbbreviations = require('datasets-us-states-abbr-names');\n\nexport default class RankingTable extends React.Component {\n    componentDidMount(){\n        //Grabs the list of players\n        console.log('Table mounted')\n        fetch('http://localhost:3001/players')\n        .then(\n            res => res.json()\n        ).then((response) =>\n            this.props.setPlayers(response.players)\n        );\n    }\n    render(){\n\n    const { order, orderBy, conferenceFilter, selectedTeamMap, doOrderBy, setSelectedPlayer, changePage } = this.props;  \n    let { playerData } = this.props;\n    \n    // lodash library used to sort the list\n    \n    playerData = _.orderBy(playerData, (item) => {\n        return item[orderBy]\n    }, order);\n\n    // does the filters based on selection\n    playerData = _.map(playerData, function(eligible) {\n\n        // first remove the extra players\n        if(selectedTeamMap !== \"\" && (selectedTeamMap === getFullTeamName(eligible.team))){\n            return eligible;\n        }else if(eligible.conference !== \"\" && selectedTeamMap === \"\"){\n            // filter by conference if one is selected\n            if((conferenceFilter === \"\") || (conferenceFilter !== \"\" && conferenceFilter === eligible.conference)){\n                //TODO: Add Team Filter\n                return eligible;\n            }\n        }\n    });\n\n    playerData = _.without(playerData, undefined);\n\n    // list of players\n    const players = playerData.map((item, index)=>{\n      return <Player data={ item } key={ item._id } rank={ index } orderBy={ orderBy } changePage={ changePage } setSelectedPlayer={ setSelectedPlayer } playerData={ playerData } />\n    }); \n\n    const header_properties = player_properties.map((prop,index)=>{\n      return <th key={index}><a href=\"#\" onClick={ doOrderBy } data-value={prop.toLowerCase()}>{prop}</a></th>\n    });\n\n    return (\n        <div>\n            <h2 className=\"sub-header\" key=\"title\">{conferenceFilter + \" \"} Player Rankings</h2>\n            <div className=\"table-responsive\" key=\"other\">\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th><a href=\"#\" onClick={ doOrderBy } data-value=\"points\">#</a></th>\n                            { header_properties }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { players }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n    }\n}\nfunction getFullTeamName (code){\n    if(code === \"SCA\" || code === \"NCA\"){\n      return \"California\";\n    }else{\n      return teamAbbreviations[code];\n    }\n}\n","import React from 'react';\n\nimport TeamCodes from './../data/teamabbreviations';\nimport ConferenceCodes from './../data/conferenceabbreviations';\n\nexport default class AddPlayer extends React.Component {\n  state = { \n    newPlayer: {\n      name: '',\n      pr: '',\n      points: '',\n      team: '',\n      conference: ''\n    },\n    changedProperties: {\n      name: false,\n      pr: false,\n      points: true,\n      team: false,\n      conference: false //optional field\n    },\n    isEligible: false,\n    errorMessage: ''\n  }\n\n  handleClearForm = (e) => {\n    e.preventDefault();\n    this.setState({ \n      newPlayer: {\n        name: '',\n        pr: '',\n        points: '',\n        team: '',\n        conference: ''\n      },\n      changedProperties: {\n        name: false,\n        pr: false,\n        points: false,\n        team: false,\n        conference: false\n      },\n      isEligible: false,\n      errorMessage: \"\"\n    });\n  }\n  handleTeamChange = (e) => {\n    let team = e.target.value;\n    if(team !== \"\"){\n      let conference = TeamCodes[team].Conf;\n      this.setState({\n        team: team,\n        conference: conference\n      });\n    }\n }\n  handleInput = (e) => {\n     let value = e.target.value;\n     let name = e.target.name;\n    \n      this.setState( prevState => {\n        return { \n          newPlayer : {\n            ...prevState.newPlayer, [name]: value,\n          }\n        }\n      }, () => this.checkIfEligible(this.state.newPlayer));\n\n      if(name === \"team\" && value !== \"\"){\n        let conference = TeamCodes[value].Conf;\n        this.setState( prevState => {\n          return { \n            newPlayer : {\n              ...prevState.newPlayer, [\"conference\"]: conference,\n            }\n          }\n        });\n\n        this.setState( prevState => {\n          return { \n            changedProperties : {\n              ...prevState.changedProperties, [\"conference\"]: true,\n            }\n          }\n        });\n      }\n\n      this.setState( prevState => {\n        return { \n          changedProperties : {\n            ...prevState.changedProperties, [name]: true,\n          }\n        }\n      });\n  }\n  checkIfEligible = (player) => {\n    console.log('CHECK');\n    console.log(player);\n    if(player.name === \"\"){\n      this.setState({\n        isEligible: false,\n        errorMessage: \"Must enter name\"\n      });\n      return false;\n    }\n    if(player.name.length <= 3){\n      this.setState({\n        isEligible: false,\n        errorMessage: \"Name not long enough\"\n      });\n      return false;\n    }\n    if(player.name.indexOf(' ') === -1){\n      this.setState({\n        isEligible: false,\n        errorMessage: \"Please enter first and last name\"\n      });\n      return false;\n    }\n    if(player.team === \"\"){\n      this.setState({\n        isEligible: false,\n        errorMessage: \"Please select team\"\n      });\n      return false;\n    }\n    if(player.conference === \"\"){\n      this.setState({\n        isEligible: false,\n        errorMessage: \"Conference not selected\"\n      });\n      return false;\n    }\n    if(player.pr === \"\"){\n      this.setState({\n        isEligible: false,\n        errorMessage: \"Enter a player rating\"\n      });\n      return false;\n    }\n    if(isNaN(player.pr)){\n      this.setState({\n        isEligible: false,\n        errorMessage: \"Player rating must be a number\"\n      });\n      return false;\n    }\n    // if(player.points === \"\"){\n    //   this.setState({\n    //     isEligible: false,\n    //     errorMessage: \"Enter a player's points\"\n    //   });\n    //   return false;\n    // }\n    if(isNaN(player.points)){\n      this.setState({\n        isEligible: false,\n        errorMessage: \"Player points must be a number\"\n      });\n      return false;\n    }\n    console.log('PLAYER ELIGIBLE')\n    this.setState({\n      isEligible: true,\n      errorMessage: \"\"\n    });\n  }\n  handleFormSubmit = (e) => {\n    let userData = this.state.newPlayer;\n\n    e.preventDefault();\n\n    fetch('http://localhost:3001/players',{\n        method: \"POST\",\n        body: JSON.stringify(userData),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n      }).then(response => {\n        response.json().then(data =>{\n          console.log(data);\n          this.props.setAlertMessage(data.message);\n          this.props.changePage('Home');\n        })\n    });\n  }\n  render() {  \n    const input_styles = {\n      fontSize: 20,\n      padding: 5,\n      borderRadius: 3,\n      width: '80%',\n      borderColor: '#1c5c96',\n      borderWidth: 1,\n      outline: 'none'\n    };\n    const cancel_button_styles = {\n      fontSize: 20,\n      margin: 10\n    };\n    const select_dropdown_styles = {\n      fontSize: 20,\n      padding: 5,\n      borderRadius: 3,\n      backgroundColor: '#fff',\n      width: '80%',\n      borderColor: '#1c5c96',\n      borderWidth: 1,\n      textAlign: 'center',\n      height: 40\n    };\n\n    let teamData = Object.keys(TeamCodes).map((team,index) => {\n      return <option value={ team } key={ index }>{ TeamCodes[team].Name }</option>\n    });\n\n    const isEligible = this.state.isEligible ? <SubmitButton /> : <div></div>;\n\n    return (\n      <div className=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n            <div style={{backgroundColor: '#fff', padding: '5%', borderRadius: '5px'}}>\n              <h1 className=\"page-header\"><center>Add Player</center></h1>\n              <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div style={{backgroundColor: '#fff', padding: '5%', borderRadius: '5px', textAlign: 'center', display: 'block'}}>\n                  <form onSubmit={ this.handleFormSubmit } style={{width: '100%'}}>\n                    <AlertMessage changedProperties={ this.state.changedProperties } errorMessage={ this.state.errorMessage }/>\n                    <h4>Name</h4>\n                    <input type=\"text\" name=\"name\" style={input_styles} onChange={this.handleInput} value={this.state.newPlayer.name}/>\n                    <h4 style={{marginLeft: '2%'}}>Team</h4>\n                    <select\n                      name=\"team\"\n                      value={this.state.newPlayer.team}\n                      onChange={this.handleInput}\n                      style={ select_dropdown_styles }\n                      >\n                      <option value=\"\" disabled>Select Team</option>\n                      { teamData }\n                    </select>\n                    <h4>Conference</h4>\n                    <h4>{this.state.newPlayer.conference !== \"\" ? ConferenceCodes[this.state.newPlayer.conference].Name : \"N/A\"}</h4>\n                    <h4>Player Rating</h4>\n                    <input type=\"text\" name=\"pr\" style={input_styles} onChange={this.handleInput} value={this.state.newPlayer.pr}/>\n                    <h4>Points</h4>\n                    <input type=\"text\" name=\"points\" style={input_styles} onChange={this.handleInput} value={this.state.newPlayer.points}/>\n                    <br/>\n                    <button type=\"button\" name=\"clear\" className=\"btn btn-link\" onClick={ this.handleClearForm } style={cancel_button_styles}>Clear</button> \n                    { isEligible }\n                  </form>\n                </div>\n              </div>\n            </div>                 \n        </div>  \n      </div>\n    );\n  }\n}\nfunction SubmitButton (){\n  const submit_button_styles = {\n    fontSize: 18,\n    width: 120,\n    margin: 10\n  };\n  return (\n    <button type=\"submit\" name=\"submit\" className=\"btn btn-primary btn-lg\" style={ submit_button_styles }>Add Player</button>\n  );\n}\nfunction AlertMessage (props){\n  // only display error or success message if all fields have seen an update\n  var changedProperties = props.changedProperties;\n  var properties = Object.keys(changedProperties);\n  var errorMessage = props.errorMessage;\n  var messageEligible = true;\n  for(var i = 0; i < properties.length; i++){\n    //console.log(changedProperties[properties[i]])\n    if(!changedProperties[properties[i]]){\n      messageEligible = false;\n      break;\n    }\n  }\n\n  if(messageEligible){\n    if(errorMessage !== \"\"){\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {errorMessage}\n        </div>\n      );\n    }else{\n      return (\n        <div className=\"alert alert-success\" role=\"alert\">\n          Player Eligible!\n        </div>\n      );\n    }\n  }else{\n    return (\n      <div></div>\n    );\n  }\n\n}","import React from 'react';\n\nexport default class LoadingWheel extends React.Component {\n    render(){\n      return (\n        <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n      );\n    }\n}","import React from 'react';\n\nimport TeamCodes from './../data/teamabbreviations';\nimport ConferenceCodes from './../data/conferenceabbreviations';\n\nimport LoadingWheel from './../components/LoadingWheel';\n\nexport default class PlayerProfile extends React.Component {\n  state = {\n    index: 0,\n    player: {\n      _id: \"\",\n      name: \"\",\n      team: \"\",\n      conference: \"\",\n      pr: \"\",\n      points: \"\"\n    },\n    updatedPlayer: {\n      _id: \"\",\n      name: \"\",\n      team: \"\",\n      conference: \"\",\n      pr: \"\",\n      points: \"\"\n    },\n    pinwheelActive: this.props.pinwheelActive\n  };\n  componentDidMount(){\n    this.setState({\n      player: this.props.selectedPlayer,\n      updatedPlayer: this.props.selectedPlayer,\n      pinwheelActive: false\n    });\n  }\n  handleInput = (e) => {\n    let value = e.target.value;\n    let name = e.target.name;\n   \n     this.setState( prevState => {\n       return { \n         updatedPlayer : {\n           ...prevState.updatedPlayer, [name]: value,\n         }\n       }\n     });\n\n     if(name === \"team\" && value !== \"\"){\n       let conference = TeamCodes[value].Conf;\n       this.setState( prevState => {\n         return { \n          updatedPlayer : {\n             ...prevState.updatedPlayer, [\"conference\"]: conference,\n           }\n         }\n       });\n     }\n    }\n  handleUpdatePlayer = (e) => {\n    e.preventDefault();\n    let oldPlayer = this.state.player;\n    let newPlayer = this.state.updatedPlayer;\n\n    if(oldPlayer !== newPlayer){\n      //close the modal, no updates were made\n      fetch('http://localhost:3001/players/' + newPlayer._id,{\n        method: \"PATCH\",\n        body: JSON.stringify(newPlayer),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n      })\n      .then(response => {\n        response.json()\n        .then(data => {\n            this.props.changePage('Home')\n          this.props.setAlertMessage(data.message);\n        })\n      });\n    }\n  }  \n  render() {\n\n    const { changePage, selectedPlayer } = this.props;\n    const input_styles = {\n      fontSize: 20,\n      padding: 5,\n      borderRadius: 3,\n      width: '100%',\n      borderColor: '#1c5c96',\n      borderWidth: 1,\n      outline: 'none',\n      marginLeft: '2%'\n    };\n    const select_dropdown_styles = {\n      fontSize: 20,\n      padding: 5,\n      borderRadius: 3,\n      backgroundColor: '#fff',\n      width: '100%',\n      borderColor: '#1c5c96',\n      borderWidth: 1,\n      textAlign: 'center',\n      marginLeft: '2%',\n      height: 40\n    };\n\n    let teamData = Object.keys(TeamCodes).map((team,index) => {\n      return <option value={ team } key={ index }>{ TeamCodes[team].Name }</option>\n    });\n\n    if(this.state.pinwheelActive){\n        return (\n            <LoadingWheel />\n        );\n    }else{\n        return (\n            <div className=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n                    <div style={{backgroundColor: '#fff', padding: '5%', borderRadius: '5px'}} key=\"1\">\n                    <h1 className=\"page-header\" key=\"2\"><center>{ selectedPlayer.name }</center></h1>\n                    <table key=\"table\">\n                        <tbody>\n                            <tr>\n                                <td>\n                                <h4>Name</h4>\n                                <input type=\"text\" name=\"name\" style={input_styles} onChange={this.handleInput} value={this.state.updatedPlayer.name}/>\n                                <h4>Team</h4>\n                                <select\n                                    name=\"team\"\n                                    value={this.state.updatedPlayer.team}\n                                    onChange={this.handleInput}\n                                    style={ select_dropdown_styles }\n                                    >\n                                    <option value=\"\" disabled>Select Team</option>\n                                    { teamData }\n                                </select>\n                                <h4>Conference</h4>\n                                <h4 style={{marginLeft: '2%'}}>{this.state.player.conference !== \"\" ? ConferenceCodes[this.state.updatedPlayer.conference].Name : \"N/A\"}</h4>\n                                <h4>Player Rating</h4>\n                                <input type=\"text\" name=\"pr\" style={input_styles} onChange={this.handleInput} value={this.state.updatedPlayer.pr}/>\n                                <h4>Points</h4>\n                                <input type=\"text\" name=\"points\" style={input_styles} onChange={this.handleInput} value={this.state.updatedPlayer.points}/>\n                                <table>\n                                    <tbody>\n                                    <tr>\n                                        <td style={{padding: '2%'}}>\n                                        <button onClick={ changePage } className=\"btn btn-link btn-lg\" style={{width: 180}} data-value=\"Home\">Back</button>\n                                        </td>\n                                        <td>\n                                        <button onClick={ this.handleUpdatePlayer } className=\"btn btn-primary btn-lg\" style={{width: 180}} id=\"updateButton\">Update</button>\n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table> \n                    </div>\n            </div>\n            );\n    }\n  }\n}\n","import React from 'react';\nimport { VectorMap } from 'react-jvectormap';\n\nexport default class TeamMap extends React.Component {\n  render(){\n    console.log('[MAP]')\n    const { clickedTeam, teamAbbreviations, removeMarker } = this.props;\n    let selectedTeamMap = this.props.selectedTeamMap;\n    var selectedRegions = [];\n    const regionControls = {\n      initial: {\n        fill: '#175c98',\n        \"fill-opacity\": 1,\n        stroke: 'none',\n        \"stroke-width\": 0,\n        \"stroke-opacity\": 1\n      },\n      hover: {\n        \"fill-opacity\": 0.8,\n        cursor: 'pointer'\n      },\n      selected: {\n        fill: 'yellow',\n        \"fill-opacity\": 1\n      },\n      selectedHover: {\n      }\n    };\n    console.log(selectedTeamMap)\n    if(selectedTeamMap !== \"\"){\n      for(var team in teamAbbreviations){\n        console.log(teamAbbreviations[team]);\n        if(teamAbbreviations[team] === selectedTeamMap){\n          selectedRegions.push(\"US-\" + team);\n        }else if(selectedTeamMap.indexOf(\"California\") != -1){\n          selectedRegions.push(\"US-CA\");\n        }\n      }\n    }\n    let map_us = <VectorMap map={ \"us_aea\" }\n               backgroundColor='#fff'\n               ref='map'\n               zoomOnScroll={false}\n               containerStyle={{\n                   width: '100%',\n                   height: '100%',\n                   padding: '5%'\n               }}\n               regionsSelectable={true}\n               regionsSelectableOne={true}\n               regionStyle={regionControls}\n               containerClassName=\"map\"\n               onRegionClick={ clickedTeam }\n               selectedRegions= { selectedRegions }\n               selectedMarkers= { [] }\n                />;\n\n\n    removeMarker();\n\n    return (\n  \t  <div style={{width: '100%', height: 500}}>\n        { map_us }\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { VectorMap } from 'react-jvectormap';\n\nexport default class TeamMapWCC extends React.Component {\n\n  render(){\n    const selectedRegions = [\"US-CA\",\"US-WA\",\"US-OR\",\"US-NV\",\"US-AZ\",\"US-ID\",\"US-HI\"];\n    const { clickedTeam, removeMarker } = this.props;\n    const regionControls = {\n      initial: {\n        fill: '#175c98',\n        \"fill-opacity\": 1,\n        stroke: 'none',\n        \"stroke-width\": 0,\n        \"stroke-opacity\": 1\n      },\n      hover: {\n        \"fill-opacity\": 0.8,\n        cursor: 'pointer'\n      },\n      selected: {\n        fill: 'yellow',\n        \"fill-opacity\": 1\n      },\n      selectedHover: {\n      }\n    };\n  \n    let map = <VectorMap map={ \"us_aea\" }\n                   backgroundColor='#fff'\n                   ref='map'\n                   zoomOnScroll={false}\n                   containerStyle={{\n                       width: '100%',\n                       height: '100%',\n                       padding: '5%'\n                   }}\n                   regionsSelectable={true}\n                   regionsSelectableOne={true}\n                   regionStyle={regionControls}\n                   containerClassName=\"map\"\n                   onRegionClick={ clickedTeam }\n                   selectedRegions= { selectedRegions }\n                   selectedMarkers= { [] }\n        />;\n\n    removeMarker();\n   \n    return (\n  \t  <div style={{width: '100%', height: 500}}>\n        { map }\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { VectorMap } from 'react-jvectormap';\n\nexport default class TeamMapRMC extends React.Component {\n\n  render(){\n    console.log('[RMCMAP]')\n    const selectedRegions = [\"US-NM\",\"US-UT\",\"US-WY\",\"US-MT\",\"US-ND\",\"US-SD\",\"US-NE\",\"US-CO\"];\n    const { clickedTeam, conferenceFilter, selectedTeamMap, teamAbbreviations, removeMarker } = this.props;\n    const regionControls = {\n      initial: {\n        fill: '#175c98',\n        \"fill-opacity\": 1,\n        stroke: 'none',\n        \"stroke-width\": 0,\n        \"stroke-opacity\": 1\n      },\n      hover: {\n        \"fill-opacity\": 0.8,\n        cursor: 'pointer'\n      },\n      selected: {\n        fill: 'yellow',\n        \"fill-opacity\": 1\n      },\n      selectedHover: {\n      }\n    };\n  \n    let map = <VectorMap map={ \"us_aea\" }\n                   backgroundColor='#fff'\n                   ref='map'\n                   zoomOnScroll={false}\n                   containerStyle={{\n                       width: '100%',\n                       height: '100%',\n                       padding: '5%'\n                   }}\n                   regionsSelectable={true}\n                   regionsSelectableOne={true}\n                   regionStyle={regionControls}\n                   containerClassName=\"map\"\n                   onRegionClick={ clickedTeam }\n                   selectedRegions= { selectedRegions }\n                   selectedMarkers= { [] }\n        />;\n\n    removeMarker();\n   \n    return (\n  \t  <div style={{width: '100%', height: 500}}>\n        { map }\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { VectorMap } from 'react-jvectormap';\n\nexport default class TeamMapMWC extends React.Component {\n\n  render(){\n    console.log('[MWCMAP]')\n    const selectedRegions = [\"US-TX\",\"US-LA\",\"US-OK\",\"US-KS\",\"US-AR\",\"US-MO\",\"US-TN\",\"US-MS\"];\n    const { clickedTeam, conferenceFilter, selectedTeamMap, teamAbbreviations, removeMarker } = this.props;\n    const regionControls = {\n      initial: {\n        fill: '#175c98',\n        \"fill-opacity\": 1,\n        stroke: 'none',\n        \"stroke-width\": 0,\n        \"stroke-opacity\": 1\n      },\n      hover: {\n        \"fill-opacity\": 0.8,\n        cursor: 'pointer'\n      },\n      selected: {\n        fill: 'yellow',\n        \"fill-opacity\": 1\n      },\n      selectedHover: {\n      }\n    };\n  \n    let map = <VectorMap map={ \"us_aea\" }\n                   backgroundColor='#fff'\n                   ref='map'\n                   zoomOnScroll={false}\n                   containerStyle={{\n                       width: '100%',\n                       height: '100%',\n                       padding: '5%'\n                   }}\n                   regionsSelectable={true}\n                   regionsSelectableOne={true}\n                   regionStyle={regionControls}\n                   containerClassName=\"map\"\n                   onRegionClick={ clickedTeam }\n                   selectedRegions= { selectedRegions }\n                   selectedMarkers= { [] }\n        />;\n\n    removeMarker();\n   \n    return (\n  \t  <div style={{width: '100%', height: 500}}>\n        { map }\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { VectorMap } from 'react-jvectormap';\n\nexport default class TeamMapSAC extends React.Component {\n\n  render(){\n    console.log('[MWCMAP]')\n    const selectedRegions = [\"US-AL\",\"US-GA\",\"US-NC\",\"US-SC\",\"US-VA\",\"US-WV\",\"US-FL\"];\n    const { clickedTeam, conferenceFilter, selectedTeamMap, teamAbbreviations, removeMarker } = this.props;\n    const regionControls = {\n      initial: {\n        fill: '#175c98',\n        \"fill-opacity\": 1,\n        stroke: 'none',\n        \"stroke-width\": 0,\n        \"stroke-opacity\": 1\n      },\n      hover: {\n        \"fill-opacity\": 0.8,\n        cursor: 'pointer'\n      },\n      selected: {\n        fill: 'yellow',\n        \"fill-opacity\": 1\n      },\n      selectedHover: {\n      }\n    };\n  \n    let map = <VectorMap map={ \"us_aea\" }\n                   backgroundColor='#fff'\n                   ref='map'\n                   zoomOnScroll={false}\n                   containerStyle={{\n                       width: '100%',\n                       height: '100%',\n                       padding: '5%'\n                   }}\n                   regionsSelectable={true}\n                   regionsSelectableOne={true}\n                   regionStyle={regionControls}\n                   containerClassName=\"map\"\n                   onRegionClick={ clickedTeam }\n                   selectedRegions= { selectedRegions }\n                   selectedMarkers= { [] }\n        />;\n\n    removeMarker();\n   \n    return (\n  \t  <div style={{width: '100%', height: 500}}>\n        { map }\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { VectorMap } from 'react-jvectormap';\n\nexport default class TeamMapGLC extends React.Component {\n\n  render(){\n    console.log('[GLCMAP]')\n    const selectedRegions = [\"US-WI\",\"US-MN\",\"US-OH\",\"US-IN\",\"US-MI\",\"US-IA\",\"US-IL\",\"US-KY\"];\n    const { clickedTeam, conferenceFilter, selectedTeamMap, teamAbbreviations, removeMarker } = this.props;\n    const regionControls = {\n      initial: {\n        fill: '#175c98',\n        \"fill-opacity\": 1,\n        stroke: 'none',\n        \"stroke-width\": 0,\n        \"stroke-opacity\": 1\n      },\n      hover: {\n        \"fill-opacity\": 0.8,\n        cursor: 'pointer'\n      },\n      selected: {\n        fill: 'yellow',\n        \"fill-opacity\": 1\n      },\n      selectedHover: {\n      }\n    };\n  \n    let map = <VectorMap map={ \"us_aea\" }\n                   backgroundColor='#fff'\n                   ref='map'\n                   zoomOnScroll={false}\n                   containerStyle={{\n                       width: '100%',\n                       height: '100%',\n                       padding: '5%'\n                   }}\n                   regionsSelectable={true}\n                   regionsSelectableOne={true}\n                   regionStyle={regionControls}\n                   containerClassName=\"map\"\n                   onRegionClick={ clickedTeam }\n                   selectedRegions= { selectedRegions }\n                   selectedMarkers= { [] }\n        />;\n\n    removeMarker();\n   \n    return (\n  \t  <div style={{width: '100%', height: 500}}>\n        { map }\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { VectorMap } from 'react-jvectormap';\n\nexport default class TeamMapNEC extends React.Component {\n\n  render(){\n    console.log('[NECMAP]')\n    const selectedRegions = [\"US-MD\",\"US-NY\",\"US-NJ\",\"US-MA\",\"US-PA\",\"US-DE\",\"US-RI\",\"US-CT\"];\n    const { clickedTeam, conferenceFilter, selectedTeamMap, teamAbbreviations, removeMarker } = this.props;\n    const regionControls = {\n      initial: {\n        fill: '#175c98',\n        \"fill-opacity\": 1,\n        stroke: 'none',\n        \"stroke-width\": 0,\n        \"stroke-opacity\": 1\n      },\n      hover: {\n        \"fill-opacity\": 0.8,\n        cursor: 'pointer'\n      },\n      selected: {\n        fill: 'yellow',\n        \"fill-opacity\": 1\n      },\n      selectedHover: {\n      }\n    };\n  \n    let map = <VectorMap map={ \"us_aea\" }\n                   backgroundColor='#fff'\n                   ref='map'\n                   zoomOnScroll={false}\n                   containerStyle={{\n                       width: '100%',\n                       height: '100%',\n                       padding: '5%'\n                   }}\n                   regionsSelectable={true}\n                   regionsSelectableOne={true}\n                   regionStyle={regionControls}\n                   containerClassName=\"map\"\n                   onRegionClick={ clickedTeam }\n                   selectedRegions= { selectedRegions }\n                   selectedMarkers= { [] }\n        />;\n\n    removeMarker();\n   \n    return (\n  \t  <div style={{width: '100%', height: 500}}>\n        { map }\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { VectorMap } from 'react-jvectormap';\n\nexport default class TeamMapCAC extends React.Component {\n\n  render(){\n    console.log('[CACMAP]')\n    const selectedRegions = [\"US-ME\",\"US-VT\",\"US-NH\",\"US-AK\"];\n    const { clickedTeam, removeMarker } = this.props;\n    const regionControls = {\n      initial: {\n        fill: '#175c98',\n        \"fill-opacity\": 1,\n        stroke: 'none',\n        \"stroke-width\": 0,\n        \"stroke-opacity\": 1\n      },\n      hover: {\n        \"fill-opacity\": 0.8,\n        cursor: 'pointer'\n      },\n      selected: {\n        fill: 'yellow',\n        \"fill-opacity\": 1\n      },\n      selectedHover: {\n      }\n    };\n  \n    let map = <VectorMap map={ \"us_aea\" }\n                   backgroundColor='#fff'\n                   ref='map'\n                   zoomOnScroll={false}\n                   containerStyle={{\n                       width: '100%',\n                       height: '100%',\n                       padding: '5%'\n                   }}\n                   regionsSelectable={true}\n                   regionsSelectableOne={true}\n                   regionStyle={regionControls}\n                   containerClassName=\"map\"\n                   onRegionClick={ clickedTeam }\n                   selectedRegions= { selectedRegions }\n                   selectedMarkers= { [] }\n        />;\n\n    removeMarker();\n   \n    return (\n  \t  <div style={{width: '100%', height: 500}}>\n        { map }\n      </div>\n    );\n  }\n}","import React from 'react';\n\nimport TeamMap from './../maps/TeamMap';\nimport TeamMapWCC from './../maps/TeamMapWCC';\nimport TeamMapRMC from './../maps/TeamMapRMC';\nimport TeamMapMWC from './../maps/TeamMapMWC';\nimport TeamMapSAC from './../maps/TeamMapSAC';\nimport TeamMapGLC from './../maps/TeamMapGLC';\nimport TeamMapNEC from './../maps/TeamMapNEC';\nimport TeamMapCAC from './../maps/TeamMapCAC';\n\nexport default class MapUS extends React.Component {\n    render(){\n        const { clickedTeam, conferenceFilter, selectedTeamMap, teamAbbreviations, removeMarker } = this.props;\n        if (conferenceFilter === \"WCC\") {\n          return (\n            <TeamMapWCC clickedTeam={ clickedTeam }\n                     conferenceFilter={ conferenceFilter }\n                     selectedTeamMap={ selectedTeamMap }\n                     teamAbbreviations={ teamAbbreviations }\n                     removeMarker={ removeMarker } />\n            );\n        }else if (conferenceFilter === \"RMC\") {\n          return (\n            <TeamMapRMC clickedTeam={ clickedTeam }\n                     conferenceFilter={ conferenceFilter }\n                     selectedTeamMap={ selectedTeamMap }\n                     teamAbbreviations={ teamAbbreviations }\n                     removeMarker={ removeMarker } />\n            );\n        }else if(conferenceFilter === \"MWC\"){\n          return (\n            <TeamMapMWC clickedTeam={ clickedTeam }\n                     conferenceFilter={ conferenceFilter }\n                     selectedTeamMap={ selectedTeamMap }\n                     teamAbbreviations={ teamAbbreviations }\n                     removeMarker={ removeMarker } />\n            );\n        }else if(conferenceFilter === \"SAC\"){\n          return (\n            <TeamMapSAC clickedTeam={ clickedTeam }\n                     conferenceFilter={ conferenceFilter }\n                     selectedTeamMap={ selectedTeamMap }\n                     teamAbbreviations={ teamAbbreviations }\n                     removeMarker={ removeMarker } />\n            );\n        }else if(conferenceFilter === \"GLC\"){\n          return (\n            <TeamMapGLC clickedTeam={ clickedTeam }\n                     conferenceFilter={ conferenceFilter }\n                     selectedTeamMap={ selectedTeamMap }\n                     teamAbbreviations={ teamAbbreviations }\n                     removeMarker={ removeMarker } />\n            );\n        }else if(conferenceFilter === \"NEC\"){\n          return (\n            <TeamMapNEC clickedTeam={ clickedTeam }\n                     conferenceFilter={ conferenceFilter }\n                     selectedTeamMap={ selectedTeamMap }\n                     teamAbbreviations={ teamAbbreviations }\n                     removeMarker={ removeMarker } />\n            );\n        }else if(conferenceFilter === \"CAC\"){\n          return (\n            <TeamMapCAC clickedTeam={ clickedTeam }\n                     conferenceFilter={ conferenceFilter }\n                     selectedTeamMap={ selectedTeamMap }\n                     teamAbbreviations={ teamAbbreviations }\n                     removeMarker={ removeMarker } />\n            );\n        }else{\n          return ( \n            <TeamMap clickedTeam={ clickedTeam }\n                     conferenceFilter={ conferenceFilter }\n                     selectedTeamMap={ selectedTeamMap }\n                     teamAbbreviations={ teamAbbreviations }\n                     removeMarker={ removeMarker } />\n            );         \n        }\n    }\n}","import React, { Component } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Navbar from './components/Navbar';\nimport RankingTable from './components/tables/RankingTable';\n\nimport AddPlayer from './pages/AddPlayer';\nimport PlayerProfile from './pages/PlayerProfile';\nimport TeamRankings from './pages/TeamRankings'\n\nimport MapUS from './components/MapUS';\n\n//NOTES: Whenever a state changes, that render method gets called again\n// Arrow functions automatically bind functions to 'this'\n\nvar _ = require('lodash');\n\nvar teamAbbreviations = require('datasets-us-states-abbr-names');\n\nclass App extends Component {\n  state = {\n      currentPage: \"Home\",      \n      orderBy: \"points\",\n      order: \"desc\",\n      rank: 0,\n      conferenceFilter: \"\",\n      selectedPlayer: {},\n      showPlayerModal: false,\n      selectedTeamMap: \"\",\n      selectedConferenceMap: {},\n      playerData: [],\n      messageUpdate: \"\",\n      pinwheelActive: false\n  };\n  render() {\n    // // filter vars\n    const conferenceFilter = this.state.conferenceFilter;\n\n    //selected team from map vars\n    const selectedTeamMap = this.state.selectedTeamMap;\n    let currentPage = {};\n\n    if(this.state.currentPage === \"Home\"){\n        currentPage = (\n          <div className=\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n            <div style={{backgroundColor: '#fff', padding: '5%', borderRadius: '5px'}}>\n              <AlertMessage message={ this.state.messageUpdate } />\n              <h1 className=\"page-header\"><center>{selectedTeamMap === \"\" ? \"Dashboard\": selectedTeamMap + \" Menu\"}</center></h1>\n              <MapUS clickedTeam={ this.clickedTeam }\n                 conferenceFilter={ conferenceFilter }\n                 selectedTeamMap={ selectedTeamMap }\n                 teamAbbreviations={ teamAbbreviations }\n                 removeMarker={ this.removeMarker } />\n              <RankingTable\n                doOrderBy={ this.doOrderBy }\n                orderBy={ this.state.orderBy }\n                setPlayers={ this.setPlayers }\n                order={ this.state.order }\n                selectedTeamMap={ this.state.selectedTeamMap }\n                conferenceFilter={ this.state.conferenceFilter }\n                playerData={ this.state.playerData }\n                changePage={ this.changePage }\n                setSelectedPlayer={ this.setSelectedPlayer }\n                setPinwheel={ this.setPinwheel }\n              />\n            </div>  \n          </div>\n        );\n    } else if(this.state.currentPage === \"AddPlayer\"){\n        currentPage = (\n          <AddPlayer changePage={ this.changePage } setAlertMessage={ this.setAlertMessage }  />\n        );\n    } else if(this.state.currentPage === \"PlayerProfile\"){\n      console.log(this.state.selectedPlayer)\n        currentPage = (\n          <PlayerProfile changePage={ this.changePage } setAlertMessage={ this.setAlertMessage } selectedPlayer={ this.state.selectedPlayer } pinwheelActive={ this.state.pinwheelActive } setPinwheel={ this.setPinwheel }/>\n        );\n    } else if(this.state.currentPage === \"TeamRankings\"){\n      currentPage = (\n        <TeamRankings changePage={ this.changePage } playerData={ this.state.playerData }/>\n      );\n    }\n\n    return (\n    <div style={{backgroundColor: '#dadada'}}>\n      <Navbar changePage={ this.changePage } showAllPlayers={this.showAllPlayers} />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <Sidebar filterConference={ this.filterConference}\n           showAllPlayers={this.showAllPlayers}\n            />\n          { currentPage }\n        </div>\n      </div>      \n    </div>\n    );\n  }\n  removeMarker = () => {\n    if(document.querySelectorAll('.jvectormap-tip').length > 0){\n      document.querySelectorAll('.jvectormap-tip')[0].remove();\n    }\n  }\n\n  // sets the order of the list based on clicked header\n  doOrderBy = (e) => {\n    e.preventDefault(); // prevents an a href link from going to page\n    const newOrderBy = e.target.getAttribute('data-value'); // (element).getAttribute('data-value')\n    console.log(newOrderBy)\n    // update the state of the orderBy property\n    this.setState({orderBy : newOrderBy});\n\n    if(newOrderBy !== 'pr' && newOrderBy !== 'points'){\n      this.setState({order : 'asc'});\n    }else{\n      this.setState({order : 'desc'});\n    }\n  }\n\n  // filter players in the list by selected conference in the Sidebar\n  filterConference = (e) => {\n    e.preventDefault();\n    const newFilter = e.target.getAttribute('data-value');\n    const page = this.state.currentPage;\n\n    if(page !== \"Home\"){\n      this.setState({\n        currentPage: \"Home\"\n      });\n    }\n\n    this.setState({\n      conferenceFilter : newFilter,\n      selectedTeamMap : \"\",\n      selectedConferenceMap : \"\"\n    });\n  }\n\n  // Resets the states back to default and shows all active players\n  showAllPlayers = (e) => {\n    e.preventDefault();\n\n    this.setState({\n      conferenceFilter : \"\",\n      teamFilter : \"\",\n      selectedTeamMap : \"\",\n      selectedConferenceMap : \"\",\n      orderBy: \"pr\",\n      order: \"desc\",\n      currentPage: \"Home\"\n    });\n  }\n\n  // closes the modal on exit\n  hideModal = () => {\n    this.setState({\n      showPlayerModal : false\n    });\n  }\n\n  changePage = (e) => {\n    let newPage = '';\n    if(typeof e.target === 'undefined'){\n      newPage = e;\n    }else{\n      e.preventDefault(); // prevents an a href link from going to page\n      newPage = e.target.getAttribute('data-value');\n    }\n    this.setState({\n      currentPage: newPage\n    });\n  }\n\n  // calls this function onchange when doing player edits\n  updatePlayer = (newPlayer) => {\n    this.setState({\n      selectedPlayer: newPlayer\n    });\n  }\n\n  // calls this function on team selected from the map\n  clickedTeam = (e,code) => {\n\n    var team = \"\";\n    var california = [\"SCA\",\"NCA\"];\n    code = code.replace(\"US-\",\"\");\n    \n    //TODO: Need popup or something to help distinguish if user wants SCA or NCA\n    console.log(code === \"CA\")\n    if(code === \"CA\"){\n      team = \"California\"\n    }else{\n      team = teamAbbreviations[code];\n    }\n\n    this.setState({\n      selectedTeamMap : team,\n      conferenceFilter : \"\"\n    });\n  }\n  setAlertMessage = (message) => {\n    this.setState({\n      messageUpdate: message\n    });\n  }\n  setPlayers = (players) => {\n    this.setState({\n      playerData: players\n    });\n  }\n  setPinwheel = (active) => {\n    this.setState({\n      pinwheelActive: active\n    })\n  }\n  setSelectedPlayer = (selectedPlayer) => {\n    this.setState({\n      selectedPlayer: selectedPlayer\n    })\n  }\n}\nfunction AlertMessage (props){\n    if(props.message === \"\"){\n      return (\n        <div></div>\n      );\n    }else{\n      return (\n        <div className=\"alert alert-success\" role=\"alert\">\n          { props.message }\n          <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n      );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('rankings-table')\n);\n\n"],"sourceRoot":""}